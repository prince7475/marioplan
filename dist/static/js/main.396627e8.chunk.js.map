{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","store/actions/actionTypes.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProjects.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notification","console","log","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","getingproject","projects_ProjectList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.396627e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nimport {connect} from 'react-redux'\r\nfunction SignedInLinks(props) {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out </a></li>\r\n            <li><NavLink to='/' className='btn btn-floating blue lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\nconst mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from \"./actionTypes\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type: LOGIN_SUCCESS})\r\n        }).catch((err)=>{\r\n            dispatch({type: LOGIN_ERROR, err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: SIGNOUT_SUCCESS})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch,getState, {getFirebase, getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName : newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials : newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: SIGNUP_SUCCESS})\r\n        }).catch((err)=>{\r\n            dispatch({type: SIGNUP_ERROR, err})\r\n        })\r\n    }\r\n}","export const CREATE_PROJECT = 'CREATE_PROJECT'\r\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR' \r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR'","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction SignedOutLinks() {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login </NavLink></li>\r\n            \r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from 'react-redux'\r\nfunction Navbar(props) {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">\r\n                    MarioPlan\r\n                </Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nfunction Notification(props) {\r\n    console.log(props.notifications)\r\n    const {notifications} = props\r\n    return (\r\n        <div className='section'>\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {\r\n                            notifications && notifications.map(item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <span className=\"blue-text\">{item.user} </span>\r\n                                        <span>{item.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(item.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Notification)","import React from 'react'\r\nimport moment from 'moment'\r\n const ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n    <span className=\"card-title\">{project.title}</span>\r\n    <p>Posted by: {project.authorFirstName} {project.authorLastName}</p>\r\n    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import ProjectSummary from './ProjectSummary';\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n const  ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&  projects.map((project) => {\r\n         \r\n          return (\r\n            <Link key={project.id} to={'/project/' + project.id}>\r\n              <ProjectSummary project={project}/>\r\n              </Link>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notification from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n//allows you to connect to you firebase database\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props\r\n        const getingproject = projects ? <ProjectList projects={projects}/> : <p>Loading</p>\r\n        //This will redirect the user if they are not logined \r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        \r\n\r\n    return (\r\n        <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n\r\n        {/* Project List */}\r\n            <div className=\"col s12 m6\">\r\n            {getingproject}\r\n            </div>\r\n\r\n        {/* Notification */}\r\n            <div className=\"col s12 m5 offset-m1\">\r\n            <Notification notifications={notifications}/>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects : state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications : state.firestore.ordered.notifications\r\n    }\r\n}\r\n// you need compose because you want to connect to your store and firebase\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    //this is how you tell firebase which collection to connect to.\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\nfunction ProjectDetails(props) {\r\n    const { auth, project } = props\r\n    //This will redirect the user if they are not logined \r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return(\r\n            <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-title\">Project Title - {project.title}</div>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by: {project.authorFirstName}  {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }else{\r\n    return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport {connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom'\r\n class SignIn extends Component {\r\n    state ={\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n  render() {\r\n      const {authError, auth} = this.props\r\n      if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\"> Sign In</h5>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn grey lighten-1z-depth-0\">Login</button>\r\n\r\n                    <div className='red-text center'>\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError : state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        //This will redirect the user if they are not logined \r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\"> Sign up</h5>\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey lighten-1z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport {connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom'\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n  render() { \r\n    const { auth } = this.props\r\n    //This will redirect the user if they are not logined \r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id='content' className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn grey lighten-1z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject :(project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"./actionTypes\";\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: CREATE_PROJECT, project })\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            dispatch({ type: CREATE_PROJECT_ERROR, err })\r\n        })\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport CreateProject from \"./components/projects/CreateProjects\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Navbar/>\r\n          <Switch>\r\n            <Route exact path='/' component={Dashboard}/>\r\n            <Route  path='/project/:id' component={ProjectDetails}/>\r\n            <Route  path='/signin' component={SignIn} />\r\n            <Route path='/signup' component={SignUp} />\r\n            <Route path='/create' component={CreateProject} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_ERROR } from \"../actions/actionTypes\";\r\n\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_ERROR:\r\n        console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n            \r\n        case LOGIN_SUCCESS:\r\n        console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        \r\n        case SIGNOUT_SUCCESS:\r\n        console.log('sign out success ')\r\n        return state\r\n\r\n        case SIGNOUT_SUCCESS:\r\n        console.log('sign up was a success')\r\n        return {\r\n            ...state, \r\n            authError: null\r\n        }\r\n\r\n        case SIGNUP_ERROR:\r\n        console.log('sign up error')\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initState = {\r\n    projects: [\r\n        { id: '1', title: 'this is a text for the title 1', content: 'blah blah blah' },\r\n        { id: '2', title: 'this is a text for the title 2', content: 'blah blah blah' },\r\n        { id: '3', title: 'this is a text for the title 3', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_PROJECT:\r\n            console.log('created project', action.project)\r\n            return state\r\n            break;\r\n        case CREATE_PROJECT_ERROR:\r\n            console.log('create project error', action.err)\r\n            break;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    //firebase have a reducer build in but you what have to tell which collect you want to connect to on you fire base database\r\n    firestore : firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth' \r\n \r\n // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyDoIcER2-rDDnpvaWuMKGAnraZfeBN1Lnc\",\r\n    authDomain: \"marioplan-370cc.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-370cc.firebaseio.com\",\r\n    projectId: \"marioplan-370cc\",\r\n    storageBucket: \"marioplan-370cc.appspot.com\",\r\n    messagingSenderId: \"399461562967\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware,compose } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from 'redux-thunk'\r\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\r\nimport {getFirebase, reactReduxFirebase} from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\nconst store = createStore(rootReducer, \r\n  compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady : true})\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() =>{\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  \r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n})\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}